//--------------------------------------
//--- 010 Editor v5.0 Binary Template
//
// File:    ddt.bt
// Author:  Petar Tasev
// Revision:1.0
// Purpose: Outline ddt files from AoM game
//--------------------------------------
LittleEndian();

typedef enum <byte> { Normal = 0, NoAlphaTest = 1, NoLowDetail = 2, DisplacementMap = 4, CubeMap = 8 } DdtProperties;
typedef enum <byte> 
{ 
    Raw32 = 1,
    Raw24 = 2,
    BT8 = 3,
    Dxt1 = 4,
    Dxt1Alpha = 5,
    Dxt3Swizzled = 6,
    AlphaData = 7,
    BC1 = Dxt1,
    BC2 = 8,
    BC3 = 9,
    RgbaDeflated = 10,
    RgbDeflated = 11,
    AlphaDeflated = 12,
    RgDeflated = 13
} DdtFormat;

// Begin
struct Header
{
    uint Magic;
    DdtProperties Properties;
    byte AlphaBits;
    DdtFormat Format;
    byte MipMapLevels;
    int Width;
    int Height;
} header;

if (header.Format == BT8) 
{
    struct
    {
        uint32 NumColors;
        uint32 RGB8Offset;
        uint32 R5G6B5Offset;
        uint32 R5G5B5Offset;
        uint32 A1R5B5G5Offset;
        uint32 A4R4B4G4Offset;
    } Bt8ImageInfo;
}

struct
{
    struct ImageEntry
    {
        uint32 Offset;
        uint32 Size;
    } ImageOffsets[header.MipMapLevels];
} ImageEntries[header.Properties == CubeMap ? 6 : 1];


if (header.Format == BT8) 
{
    // TODO: implement
}

local int i = 0;
local int j = 0;
struct
{
    struct
    {
        FSeek(ImageEntries[i].ImageOffsets[j].Offset);
        byte ImageData[ImageEntries[i].ImageOffsets[j].Size];
        j++;
    } ImageDatas[header.MipMapLevels] <optimize=false>;
    i++;
} Faces[header.Properties == CubeMap ? 6 : 1];